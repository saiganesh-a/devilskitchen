|||2024-07-22 13:10:45,272 DEBUG org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] Application failed to start due to an exception
|||org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.tcs.bancs.microservices.repository.ref.Migenq_t1DetailRefRepo' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoMatchingBeanFound(DefaultListableBeanFactory.java:1717)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:884)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:227)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1356)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1203)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.tcs.bancs.microservices.utils.OpenBankingServicesApp.main(OpenBankingServicesApp.java:43)
2024-07-22 13:10:45,272 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [main] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.tcs.bancs.microservices.impl.MigenqDetailsRepositoryImpl required a bean of type 'com.tcs.bancs.microservices.repository.ref.Migenq_t1DetailRefRepo' that could not be found.


Action:

Consider defining a bean of type 'com.tcs.bancs.microservices.repository.ref.Migenq_t1DetailRefRepo' in your configuration.

|||



----------------------------------------------


package com.tcs.bancs.microservices.impl;

import java.io.IOException;
import java.io.Reader;
import java.io.StringWriter;
import java.sql.Clob;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Base64;
import java.util.Calendar;
import java.util.Date;
import java.util.Random;

import javax.sql.rowset.serial.SerialException;

import org.apache.commons.io.IOUtils;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.api.jsonata4java.expressions.ParseException;
import com.tcs.bancs.microservices.db.model.Migenq_t1;
import com.tcs.bancs.microservices.db.model.Migenq_t2;
import com.tcs.bancs.microservices.db.model.Migenq_t3;
import com.tcs.bancs.microservices.db.model.Migenqpk_t1;
import com.tcs.bancs.microservices.db.model.Migenqpk_t2;
import com.tcs.bancs.microservices.db.model.Migenqpk_t3;
import com.tcs.bancs.microservices.exception.RrnException;
import com.tcs.bancs.microservices.exception.SrcException;
import com.tcs.bancs.microservices.repository.day.Migenq_t1DetailDayRepo;
import com.tcs.bancs.microservices.repository.day.Migenq_t2DetailDayRepo;
import com.tcs.bancs.microservices.repository.day.Migenq_t3DetailDayRepo;
import com.tcs.bancs.microservices.repository.ref.Migenq_t1DetailRefRepo;
import com.tcs.bancs.microservices.repository.ref.Migenq_t2DetailRefRepo;
import com.tcs.bancs.microservices.repository.ref.Migenq_t3DetailRefRepo;
//import com.tcs.log.utils.ClobToStringConverter;
//import com.tcs.log.utils.encryptLog;

//import com.tcs.bancs.microservices.utils.DateTime;

@Service
public class MigenqDetailsRepositoryImpl {
	private final Migenq_t1DetailRefRepo dayRepo1;
	private final Migenq_t2DetailRefRepo dayRepo2;
	private final Migenq_t3DetailRefRepo dayRepo3;

	
	  
	 @Autowired
	 public MigenqDetailsRepositoryImpl(Migenq_t1DetailRefRepo dayRepo1, Migenq_t2DetailRefRepo dayRepo2,
			Migenq_t3DetailRefRepo dayRepo3) {
		super();
		this.dayRepo1 = dayRepo1;
		this.dayRepo2 = dayRepo2;
		this.dayRepo3 = dayRepo3;
	}
	//org.slf4j.Logger logger = LoggerFactory.getLogger(MigenqDetailsRepositoryImpl.class);
	public void LogData(String RESPONSE_STATUS,String REQ_STR,String RESP_STR, String CLIENT_IP,String TELLER_ID,String ERROR_CODE,String ERROR_DESCRIPTION ,String PK_REQ_REF_NO,String SRC_ID ,String Response_string,String RECD_TIME,String ClientIp) throws SerialException, SQLException, IOException, RrnException, SrcException {
		
		
		DateTimeFormatter entryDate = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss:SSS");
		DateTimeFormatter entryDate1 = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		LocalDateTime time = LocalDateTime.now();
		LocalDate date = LocalDate.now();
		int dayCount =date.getDayOfMonth();
		//int dayCount =17;
		int Logsaver=dayCount%3;
		
		if (PK_REQ_REF_NO == null||PK_REQ_REF_NO.length()>=26|| PK_REQ_REF_NO.isEmpty()) {
			PK_REQ_REF_NO = " ";
		}
		if(SRC_ID == null||SRC_ID.length()>=6 || SRC_ID.isEmpty()){
			SRC_ID=" ";
		}
		
		if(PK_REQ_REF_NO==null) {
			throw new RrnException();
		}else if(SRC_ID==null) {
			 throw new SrcException();
		 }
			
		if(Logsaver==1) {
		Migenq_t1 mig =new Migenq_t1();
		Migenqpk_t1 pk=new Migenqpk_t1();
		pk.setPK_REQ_REF_NO(PK_REQ_REF_NO);
		pk.setSRC_ID(SRC_ID);
		if(ClientIp == null || ClientIp.isEmpty() || ClientIp.length() >= 20) {
			mig.setCLIENT_IP(" ");} else {mig.setCLIENT_IP(ClientIp);}
		
		mig.setTELLER_ID(" ");
		pk.setENTRY_DATE(entryDate1.format(time));
		mig.setTXN_NO(" ");
		mig.setTXN_NAME("GO_NOGO_Enquiry");							
		mig.setRESPONSE_STATUS(RESPONSE_STATUS);
		mig.setERROR_CODE(ERROR_CODE);
		mig.setERROR_DESCRIPTION(ERROR_DESCRIPTION);
		mig.setREQ_STR(REQ_STR);
		mig.setRESP_STR(Response_string);
		pk.setRECD_TIME(RECD_TIME);
		mig.setRESP_TIME(entryDate.format(time));
		mig.setMigpk(pk);
		Clob clob=new javax.sql.rowset.serial.SerialClob(RESP_STR.toCharArray());
        mig.setRESPONSE_STRING(clob);
        dayRepo1.save(mig);
	//	return false;
		}else if(Logsaver==2) {
			Migenq_t2 mig2 =new Migenq_t2();
			Migenqpk_t2 pk2=new Migenqpk_t2();
			pk2.setPK_REQ_REF_NO(PK_REQ_REF_NO);
			pk2.setSRC_ID(SRC_ID);
			if(ClientIp == null || ClientIp.isEmpty() || ClientIp.length() >= 20) {
			mig2.setCLIENT_IP(" ");} else {mig2.setCLIENT_IP(ClientIp);}
			mig2.setTELLER_ID(" ");
			pk2.setENTRY_DATE(entryDate1.format(time));
			mig2.setTXN_NO(" ");
			mig2.setTXN_NAME("GO_NOGO_Enquiry");							
			mig2.setRESPONSE_STATUS(RESPONSE_STATUS);
			mig2.setERROR_CODE(ERROR_CODE);
			mig2.setERROR_DESCRIPTION(ERROR_DESCRIPTION);
			mig2.setREQ_STR(REQ_STR);
			mig2.setRESP_STR(Response_string);
			pk2.setRECD_TIME(RECD_TIME);
			mig2.setRESP_TIME(entryDate.format(time));
			mig2.setMigpk(pk2);
			Clob clob=new javax.sql.rowset.serial.SerialClob(RESP_STR.toCharArray());
	        mig2.setRESPONSE_STRING(clob);
	        dayRepo2.save(mig2);
			//return false;
			}
		else if(Logsaver==0) {
			Migenq_t3 mig3 =new Migenq_t3();
			Migenqpk_t3 pk3=new Migenqpk_t3();
			pk3.setPK_REQ_REF_NO(PK_REQ_REF_NO);
			pk3.setSRC_ID(SRC_ID);
			if(ClientIp == null || ClientIp.isEmpty() || ClientIp.length() >= 20) {
				mig3.setCLIENT_IP(" ");} else {mig3.setCLIENT_IP(ClientIp);}
			mig3.setTELLER_ID(" ");
			pk3.setENTRY_DATE(entryDate1.format(time));
			mig3.setTXN_NO(" ");
			mig3.setTXN_NAME("GO_NOGO_Enquiry");							
			mig3.setRESPONSE_STATUS(RESPONSE_STATUS);
			mig3.setERROR_CODE(ERROR_CODE);
			mig3.setERROR_DESCRIPTION(ERROR_DESCRIPTION);
			mig3.setREQ_STR(REQ_STR);
			mig3.setRESP_STR(Response_string);
			pk3.setRECD_TIME(RECD_TIME);
			mig3.setRESP_TIME(entryDate.format(time));
			mig3.setMigpk(pk3);
			Clob clob=new javax.sql.rowset.serial.SerialClob(RESP_STR.toCharArray());
	        mig3.setRESPONSE_STRING(clob);
	        dayRepo3.save(mig3);
			//return false;
			} 
		
		
	}
		

}






-------------------------------------------------------



package com.tcs.bancs.microservices.repository.ref;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.tcs.bancs.microservices.db.model.Migenq_t1;

@Repository
public interface Migenq_t1DetailRefRepo  extends JpaRepository<Migenq_t1, Integer>{
	
}

