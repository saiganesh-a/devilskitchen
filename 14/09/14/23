package com.tcs.bancs.microservices.services;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

public class PuttyConnectorApp {

    public static void main(String[] args) {
        // Create the main frame
        JFrame frame = new JFrame("PuTTY Connector Hyderabad Dev");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 500);
        frame.setLayout(new BorderLayout(10, 10)); // Adds padding between components
        
        // Header panel for the title
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
        JLabel headerLabel = new JLabel("PuTTY Connector - Select a Region");
        headerLabel.setFont(new Font("Arial", Font.BOLD, 24));
        headerPanel.add(headerLabel);
        frame.add(headerPanel, BorderLayout.NORTH);

        // Center panel to hold the buttons
        JPanel buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayout(3, 3, 15, 15)); // 3x3 grid with padding
        
        // Button regions
        String[] regions = {"D1 Dev", "D4 Dev", "D2 Dev", "D8 Dev", "D9 Dev", 
                            "V3 Dev", "V4 Dev", "F1V1", "Autosys"};

        for (String region : regions) {
            JButton button = new JButton(region);
            button.setFont(new Font("Arial", Font.PLAIN, 16));
            button.addActionListener(e -> connectToPutty(region));
            buttonPanel.add(button);
        }
        frame.add(buttonPanel, BorderLayout.CENTER);

        // Footer panel for additional information or status
        JPanel footerPanel = new JPanel();
        footerPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));
        JLabel footerLabel = new JLabel("PuTTY Connector - Version 1.4.9");
        footerPanel.add(footerLabel);
        frame.add(footerPanel, BorderLayout.SOUTH);

        // Make frame visible
        frame.setVisible(true);
    }

    // Method to connect to PuTTY
    public static void connectToPutty(String region) {
        try {
            String command = "";
            String puttyPath = new File("putty.exe").getAbsolutePath(); // Ensure the correct path
            
            // Customize command based on region selected
            switch (region) {
                case "D1 Dev":
                    command = puttyPath + " -ssh fnsonld1@10.176.15.50 -P 2321 -pw DevPassword";
                    break;
                case "D4 Dev":
                    command = puttyPath + " -ssh fnsonld4@10.176.15.51 -P 2321 -pw DevPassword";
                    break;
                // Add other regions similarly
                default:
                    System.out.println("Region not configured: " + region);
                    return;
            }
            
            // Start the process to open PuTTY
            Runtime.getRuntime().exec(command);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}