000100$ SET ilsmartlinkage
000200$ SET ilnamespace "com.tcs.bancs.microservices.jvm.dbio"
000300******************************************************************
000400*   (C) COPYRIGHT FINANCIAL NETWORK SERVICES PTY LTD. 1982       *
000500*       ALL RIGHTS RESERVED. NO PART OF THIS PROGRAM MAY         *
000600*       BE PHOTOCOPIED, REPRODUCED, TRANSLATED TO ANOTHER        *
000700*       PROGRAM LANGUAGE OR USED IN ANY WAY WITHOUT THE          *
000800*       PRIOR WRITTEN CONSENT OF FINANCIAL NETWORK SERVICES      *
000900*       OR THE AUTHORISED SELLING AGENT.                         *
001000*----------------------------------------------------------------*
001100*             FINANCIAL NETWORK SERVICES PTY LTD.                *
001200*             UNIT 6, 70 ROSEHILL ST REDFERN 2016                *
001300*                   SYDNEY, AUSTRALIA.                           *
001400*                  TEL. (612) 9318-1088                          *
001500******************************************************************
001600 IDENTIFICATION DIVISION.
001700 PROGRAM-ID.      IOTXTM.
001800 AUTHOR.          FNS.
001900 DATE-WRITTEN.    20230417.
002000 DATE-COMPILED.   XXXXXXXXXXX.
002100 SECURITY.
002200*    SQL  MODULE FOR TXTM.
002300 ENVIRONMENT DIVISION.
002400 DATA DIVISION.
002500 WORKING-STORAGE SECTION.
002600 01  W-PROGRAM-NAME              PIC X(12) VALUE  "IOTXTM:".
002700 01  W-PROGRAM-CALLED            PIC X(8)  VALUE  "UT9004".
002800 01  UT9004CA-CALL-AREA.
002900     COPY UT9004CA IN LIBRYMIS
003000          REPLACING ==(UT9004CA)== BY ==UT9004CA==.
003100 01  WORKING-VARIABLES.
003200     03  REMOTE-TABLE            PIC X(13) VALUE SPACES.
003300     03  OPEN-CURSOR-FLAG        PIC X     VALUE SPACE.
003400         88  OPEN-CURSOR-FAIL    VALUE "N".
003500     03  DATA-OUT-FLAG           PIC X     VALUE SPACE.
003600         88  DATA-OUT            VALUE "Y".
003700*    03  PASSED-VIEW-INDICATOR   PIC X     VALUE "N".
003800*        88  PASSED-VIEW         VALUE "Y".
003900*        88  DID-NOT-PASSED-VIEW VALUE "N".
004000     03  SAVE-MASTER-IN-USE      PIC 9     VALUE 0.
004100     03  SAVE-SYSTEM-MODE        PIC X     VALUE SPACE.
004200         88  DAY-MODE            VALUE "D".
004300         88  NIGHT-MODE          VALUE "N".
004400     03  WHICH-MASTER            PIC X     VALUE SPACE.
004500         88  USE-MASTER-1        VALUE "1".
004600         88  USE-MASTER-2        VALUE "2".
004700     03  SELECT-PK               PIC X(58) VALUE SPACES.
004800
004900 01  IVAL-PK.
005000     03  IV-PK-KEY-1                   PIC X(031).
005100
005200 01  WA-TRAIL-SPACES             PIC 9(4) VALUE 0.
005300     EXEC SQL BEGIN DECLARE SECTION END-EXEC.
005400
005500 01  MAX-IND                           PIC S9(4) COMP.
005600 01  SELECT-STR                        PIC X(2048) VALUES SPACES.
005700
005800 01  D-PK.
005900     03  D-PK-KEY-1                    PIC X(031) .
006000
006100
006200 01  D-TXTM.
006300     03  D-KEY-1                       PIC X(031) .
006400     03  D-STAT                        PIC X(001) .
006500     03  D-TEXT                        PIC X(200) .
006600     03  D-TEXT-LENGTH                 PIC X(003) .
006700     03  D-TEXT-BOUND-LEN              PIC X(003) .
006800
006900      EXEC SQL END DECLARE SECTION END-EXEC.
007000
007100      EXEC SQL INCLUDE SQLCA END-EXEC.
007200
007300 LINKAGE SECTION.
007400 01  IOMOD-FILE                  PIC X(14).
007500 01  IOMOD-KEY                   PIC X(100).
007600 01  IOMOD-RECORD.
007700
007800     03  W-KEY-1                       PIC X(031).
007900     03  W-STAT                        PIC X(001).
008000     03  W-TEXT                        PIC X(200).
008100     03  W-TEXT-LENGTH                 PIC X(003).
008200     03  W-TEXT-BOUND-LEN              PIC X(003).
008300 01  IOMOD-FUNCTION              PIC X(0012).
008400     88  OPEN-CMD                VALUE "OPEN".
008500     88  CLOSE-CMD               VALUE "CLOSE".
008600     88  READ-CMD                VALUE "READ".
008700     88  READFIRST-CMD           VALUE "READFIRST".
008800     88  READNEXT-CMD            VALUE "READNEXT".
008900     88  WRITE-CMD               VALUE "WRITE".
009000     88  REWRITE-CMD             VALUE "REWRITE".
009100     88  DELETE-CMD              VALUE "DELETE".
009200     88  COMMIT-CMD              VALUE "COMMIT".
009300     88  ROLLBACK-CMD            VALUE "ROLLBACK".
009400     88  SETTXCON-CMD            VALUE "SETTXCON".
009500     88  RELTXCON-CMD            VALUE "RELTXCON".
009600     88  SELECTMAX-CMD           VALUE "SELECTMAX".
009700 01  IOMOD-KEY-NO                PIC 9(3).
009800 01  IOMOD-RELEASE-LOCK          PIC X.
009900 01  IOMOD-ACCESS-COMMAND        PIC X(4).
010000     88  ACCESS-CMD-BEGN         VALUE "BEGN".
010100 01  IOMOD-ACCESS-COND           PIC X(3).
010200     88  ACCESS-COND-KEY         VALUE "KEY".
010300     88  ACCESS-COND-PGT         VALUE "PGT".
010400     88  ACCESS-COND-PGE         VALUE "PGE".
010500     COPY IOORAST IN LIBRYMIS.
010600
010700  PROCEDURE DIVISION USING IOMOD-FILE
010800                           IOMOD-KEY
010900                           IOMOD-RECORD
011000                           IOMOD-FUNCTION
011100                           IOMOD-KEY-NO
011200                           IOMOD-RELEASE-LOCK
011300                           IOMOD-ACCESS-COMMAND
011400                           IOMOD-ACCESS-COND
011500                           IOMOD-STATUS.
011600
011700 A000-MAIN SECTION.
011800 A000-START.
011900     SET UT9004CA-CALL-FOR-GET TO TRUE.
012000     MOVE "UT9004" TO W-PROGRAM-CALLED.
012100     CALL W-PROGRAM-CALLED USING UT9004CA-CALL-AREA.
012200     IF NOT UT9004CA-RETURN-OK
012300        STRING "UT9004-RETURN-CODE="
012400               UT9004CA-RETURN-CODE
012500          DELIMITED BY SIZE
012600          INTO IOMOD-FUNCTION
012700        END-STRING
012800     ELSE
012900        IF UT9004CA-SYSTEM-MODE   NOT = SAVE-SYSTEM-MODE
013000        OR UT9004CA-MASTER-IN-USE NOT = SAVE-MASTER-IN-USE
013100           MOVE UT9004CA-SYSTEM-MODE   TO SAVE-SYSTEM-MODE
013200           MOVE UT9004CA-MASTER-IN-USE TO SAVE-MASTER-IN-USE
013300*       IF UT9004CA-SYSTEM-MODE-IS-DAY
013400*          SET DAY-MODE TO TRUE
013500        IF DAY-MODE
013600     EXEC SQL
013700        DECLARE S_SEL01TXTM_PK
013800        CURSOR FOR
013900        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */  *
014000        FROM TXTM
014100        WHERE (KEY_1  > :D-PK-KEY-1 )
014200           AND ROWNUM < 2
014300        ORDER BY KEY_1  ASC
014400     END-EXEC
014500
014600           CONTINUE
014700        ELSE
014800*          SET NIGHT-MODE TO TRUE
014900           IF UT9004CA-MASTER-IN-USE-IS-1
015000           SET USE-MASTER-1 TO TRUE
015100           MOVE "1" TO WHICH-MASTER
015200           MOVE "TMP_1_TXTM " TO REMOTE-TABLE
015300           ELSE
015400           MOVE "2" TO WHICH-MASTER
015500           MOVE "TMP_2_TXTM " TO REMOTE-TABLE
015600           END-IF
015700           PERFORM B000-DECLARE
015800        END-IF
015900        PERFORM M300-DATA-LEN
016000        END-IF
016100     END-IF
016200
016300     IF UT9004CA-TRACESTATE-ON
016400        DISPLAY "IOTXTM:"
016500                "(A000) ENTRY - FUNCTION " IOMOD-FUNCTION
016600                " KEY-NO " IOMOD-KEY-NO
016700                " VALUE " IOMOD-KEY
016800     END-IF
016900     PERFORM Z500-INIT-STATUS
017000     MOVE IOMOD-FUNCTION TO IOMOD-F2-FUNCT
017100     MOVE "N" TO DATA-OUT-FLAG
017200
017300     EVALUATE TRUE
017400       WHEN READ-CMD
017500         MOVE "Y" TO DATA-OUT-FLAG
017600         IF IOMOD-RELEASE-LOCK = "N"
017700          EVALUATE IOMOD-KEY-NO
017800            WHEN 0
017900              PERFORM M200-KI-PK
018000              PERFORM M210-ID-PK
018100              PERFORM D100-SEL-LOCK-PK
018200            WHEN OTHER
018300              MOVE "IK" TO IOMOD-F2-STAT
018400          END-EVALUATE
018500         ELSE
018600          EVALUATE IOMOD-KEY-NO
018700            WHEN 0
018800              PERFORM M200-KI-PK
018900              PERFORM M210-ID-PK
019000              PERFORM D110-SEL-NOLOCK-PK
019100            WHEN OTHER
019200              MOVE "IK" TO IOMOD-F2-STAT
019300          END-EVALUATE
019400         END-IF
019500
019600       WHEN DELETE-CMD
019700         PERFORM M200-KI-PK
019800         PERFORM M210-ID-PK
019900         PERFORM D200-DELETE
020000         PERFORM F200-F2-SQLCODE
020100
020200       WHEN WRITE-CMD
020300         PERFORM M200-KI-PK
020400         PERFORM M210-ID-PK
020500         PERFORM M000-DATA-IN
020600         PERFORM D300-INSERT
020700
020800       WHEN REWRITE-CMD
020900         PERFORM M200-KI-PK
021000         PERFORM M210-ID-PK
021100         PERFORM M000-DATA-IN
021200         PERFORM D400-UPDATE
021300         PERFORM F200-F2-SQLCODE
021400         IF NIGHT-MODE AND IOMOD-F2-SQLCODE = 1403
021500            PERFORM D300-INSERT
021600         END-IF
021700
021800       WHEN READFIRST-CMD
021900         MOVE "Y" TO DATA-OUT-FLAG
022000          EVALUATE IOMOD-KEY-NO
022100            WHEN 0
022200                MOVE LOW-VALUES
022300                TO D-PK-KEY-1
022400                PERFORM  D000-PK
022500            WHEN OTHER
022600              MOVE "IK" TO IOMOD-F2-STAT
022700          END-EVALUATE
022800
022900       WHEN READNEXT-CMD
023000         MOVE "Y" TO DATA-OUT-FLAG
023100          EVALUATE IOMOD-KEY-NO
023200            WHEN 0
023300                PERFORM  M200-KI-PK
023400                PERFORM  M210-ID-PK
023500                PERFORM  D000-PK
023600            WHEN OTHER
023700              MOVE "IK" TO IOMOD-F2-STAT
023800          END-EVALUATE
023900
024000       WHEN SELECTMAX-CMD
024100         PERFORM M200-KI-PK
024200         PERFORM M210-ID-PK
024300         PERFORM D500-SELECT-MAX
024400
024500       WHEN OTHER
024600         DISPLAY "IOTXTM:"
024700          "(A000) INVALID FUNCTION " IOMOD-FUNCTION
024800         MOVE -1 TO IOMOD-F1-SQLCODE
024900                    IOMOD-F2-SQLCODE
025000         MOVE "ER" TO IOMOD-F1-STAT
025100     END-EVALUATE
025200
025300     IF UT9004CA-TRACESTATE-ON
025400        DISPLAY "IOTXTM:"
025500                "(A000) AFTER - FUNCTION " IOMOD-FUNCTION
025600                " KEY-NO " IOMOD-KEY-NO
025700                " VALUE " IOMOD-KEY
025800        DISPLAY "IOTXTM:"
025900                "(A000) AFTER - FUNCTION " IOMOD-FUNCTION
026000                " F1 FUNCTION = " IOMOD-F1-FUNCT
026100                " F1 SQLCODE  = " IOMOD-F1-SQLCODE
026200        DISPLAY "IOTXTM:"
026300                "(A000) AFTER - FUNCTION " IOMOD-FUNCTION
026400                " F2 FUNCTION = " IOMOD-F2-FUNCT
026500                " F2 SQLCODE  = " IOMOD-F2-SQLCODE
026600     END-IF
026700     .
026800 A-GOBACK.
026900     EXIT PROGRAM
027000     .
027100 B000-DECLARE  SECTION.
027200 B000-START.
027300     MOVE SPACES TO SELECT-STR.
027400     STRING
027500     "SELECT * FROM (SELECT * FROM ("
027600     "SELECT /*+ INDEX_ASC(TXTM TXTMPK) */  "
027700     "* "
027800     "FROM TXTM "
027900     "WHERE  KEY_1 > :V0001"
028000     "  AND  ROWNUM < 2 "
028100     ") UNION ALL SELECT * FROM ("
028200     "SELECT /*+ INDEX_ASC(TXTM TXTMPK) */ "
028300     "* "
028400     "FROM "
028500     REMOTE-TABLE
028600     "WHERE  KEY_1 > :V0002"
028700     "  AND  ROWNUM < 2 "
028800     ")) "
028900     "ORDER BY KEY_1  ASC "
029000       DELIMITED BY SIZE
029100       INTO SELECT-STR
029200     END-STRING
029300     EXEC SQL
029400          PREPARE S_SEL01_PK FROM :SELECT-STR
029500     END-EXEC
029600     EXEC SQL
029700          DECLARE SEL01TXTM_PK CURSOR FOR S_SEL01_PK
029800     END-EXEC
029900     .
030000 D000-PK       SECTION.
030100 D000-PK-START.
030200     MOVE "FETCH" TO IOMOD-F1-FUNCT
030300     IF DAY-MODE
030400        EXEC SQL
030500             OPEN S_SEL01TXTM_PK
030600        END-EXEC
030700        PERFORM F100-F1-SQLCODE
030800        EXEC SQL
030900             FETCH S_SEL01TXTM_PK INTO
031000             :D-KEY-1,              :D-STAT,
031100             :D-TEXT,               :D-TEXT-LENGTH,
031200             :D-TEXT-BOUND-LEN
031300        END-EXEC
031400        PERFORM F200-F2-SQLCODE
031500     ELSE
031600        EXEC SQL
031700             OPEN SEL01TXTM_PK USING
031800             :D-PK-KEY-1
031900             ,
032000             :D-PK-KEY-1
032100        END-EXEC
032200        PERFORM F100-F1-SQLCODE
032300        EXEC SQL
032400             FETCH SEL01TXTM_PK INTO
032500             :D-KEY-1,              :D-STAT,
032600             :D-TEXT,               :D-TEXT-LENGTH,
032700             :D-TEXT-BOUND-LEN
032800        END-EXEC
032900        PERFORM F200-F2-SQLCODE
033000     END-IF
033100     .
033200 D100-SEL-LOCK-PK     SECTION.
033300 D100-START-PK.
033400     EXEC SQL
033500        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
033600             :D-KEY-1,              :D-STAT,
033700             :D-TEXT,               :D-TEXT-LENGTH,
033800             :D-TEXT-BOUND-LEN
033900        FROM       TXTM
034000        WHERE  KEY_1 =  :D-PK-KEY-1
034100        FOR UPDATE NOWAIT
034200     END-EXEC
034300     PERFORM F200-F2-SQLCODE
034400     IF NIGHT-MODE AND IOMOD-F2-SQLCODE = 1403
034500        MOVE "Y" TO OPEN-CURSOR-FLAG
034600        IF USE-MASTER-1
034700        EXEC SQL
034800        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
034900             :D-KEY-1,              :D-STAT,
035000             :D-TEXT,               :D-TEXT-LENGTH,
035100             :D-TEXT-BOUND-LEN
035200        FROM TMP_1_TXTM
035300        WHERE  KEY_1 =  :D-PK-KEY-1
035400        FOR UPDATE NOWAIT
035500        END-EXEC
035600        ELSE
035700        EXEC SQL
035800        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
035900             :D-KEY-1,              :D-STAT,
036000             :D-TEXT,               :D-TEXT-LENGTH,
036100             :D-TEXT-BOUND-LEN
036200        FROM TMP_2_TXTM
036300        WHERE  KEY_1 =  :D-PK-KEY-1
036400        FOR UPDATE NOWAIT
036500        END-EXEC
036600        END-IF
036700        PERFORM F200-F2-SQLCODE
036800     END-IF
036900     .
037000 D110-SEL-NOLOCK-PK     SECTION.
037100 D110-START-PK.
037200     EXEC SQL
037300        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
037400             :D-KEY-1,              :D-STAT,
037500             :D-TEXT,               :D-TEXT-LENGTH,
037600             :D-TEXT-BOUND-LEN
037700        FROM       TXTM
037800        WHERE  KEY_1 =  :D-PK-KEY-1
037900     END-EXEC
038000     PERFORM F200-F2-SQLCODE
038100     IF NIGHT-MODE AND IOMOD-F2-SQLCODE = 1403
038200        MOVE "Y" TO OPEN-CURSOR-FLAG
038300        IF USE-MASTER-1
038400        EXEC SQL
038500        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
038600             :D-KEY-1,              :D-STAT,
038700             :D-TEXT,               :D-TEXT-LENGTH,
038800             :D-TEXT-BOUND-LEN
038900        FROM TMP_1_TXTM
039000        WHERE  KEY_1 =  :D-PK-KEY-1
039100        END-EXEC
039200        ELSE
039300        EXEC SQL
039400        SELECT /*+ INDEX_ASC(TXTM TXTMPK) */* INTO
039500             :D-KEY-1,              :D-STAT,
039600             :D-TEXT,               :D-TEXT-LENGTH,
039700             :D-TEXT-BOUND-LEN
039800        FROM TMP_2_TXTM
039900        WHERE  KEY_1 =  :D-PK-KEY-1
040000        END-EXEC
040100        END-IF
040200        PERFORM F200-F2-SQLCODE
040300     END-IF
040400     .
040500 D200-DELETE   SECTION.
040600 D200-START.
040700     EXEC SQL
040800       DELETE FROM TXTM
040900        WHERE  KEY_1 =  :D-PK-KEY-1
041000     END-EXEC
041100     .
041200 D300-INSERT   SECTION.
041300 D300-START.
041400     EXEC SQL
041500       INSERT INTO TXTM
041600             (KEY_1,              STAT,
041700              TEXT,               TEXT_LENGTH,
041800              TEXT_BOUND_LEN)
041900       VALUES(:D-KEY-1,              :D-STAT,
042000              :D-TEXT,               :D-TEXT-LENGTH,
042100              :D-TEXT-BOUND-LEN)
042200     END-EXEC
042300     PERFORM F200-F2-SQLCODE
042400     .
042500 D400-UPDATE  SECTION.
042600 D400-START.
042700     EXEC SQL
042800       UPDATE TXTM
042900        SET STAT = :D-STAT,
043000            TEXT = :D-TEXT,
043100            TEXT_LENGTH = :D-TEXT-LENGTH,
043200            TEXT_BOUND_LEN = :D-TEXT-BOUND-LEN
043300        WHERE  KEY_1 =  :D-PK-KEY-1
043400     END-EXEC
043500     .
043600 D500-SELECT-MAX SECTION.
043700 D500-START.
043800     DISPLAY "NOT SUPPORTED IN THIS IO MODULE"
043900     .
044000 F100-F1-SQLCODE   SECTION.
044100 F100-START.
044200     MOVE SQLCODE TO IOMOD-F1-SQLCODE
044300     IF IOMOD-F1-SQLCODE NOT = 0
044400        MOVE "ER"     TO IOMOD-F1-STAT
044500        MOVE "N"      TO OPEN-CURSOR-FLAG
044600     ELSE
044700        MOVE "OK"     TO IOMOD-F1-STAT
044800     END-IF
044900     .
045000 F200-F2-SQLCODE   SECTION.
045100 F200-START.
045200     MOVE SQLCODE TO IOMOD-F2-SQLCODE
045300     IF IOMOD-F2-SQLCODE NOT = 0
045400        MOVE "ER"     TO IOMOD-F2-STAT
045500     ELSE
045600        MOVE "OK"     TO IOMOD-F2-STAT
045700        IF DATA-OUT
045800           PERFORM M100-DATA-OUT
045900        END-IF
046000     END-IF
046100     .
046200 M000-DATA-IN      SECTION.
046300 M000-START.
046400     MOVE W-KEY-1              TO D-KEY-1
046500     MOVE W-STAT               TO D-STAT
046600     MOVE W-TEXT               TO D-TEXT
046700     MOVE W-TEXT-LENGTH        TO D-TEXT-LENGTH
046800     MOVE W-TEXT-BOUND-LEN     TO D-TEXT-BOUND-LEN
046900     .
047000 M100-DATA-OUT     SECTION.
047100 M100-START.
047200     MOVE D-KEY-1              TO W-KEY-1
047300     MOVE D-STAT               TO W-STAT
047400     MOVE D-TEXT               TO W-TEXT
047500     MOVE D-TEXT-LENGTH        TO W-TEXT-LENGTH
047600     MOVE D-TEXT-BOUND-LEN     TO W-TEXT-BOUND-LEN
047700     .
047800 M200-KI-PK     SECTION.
047900 M200-START-KI-PK.
048000     MOVE IOMOD-KEY TO IVAL-PK
048100     .
048200
048300 M210-ID-PK     SECTION.
048400 M210-START-ID-PK.
048500     MOVE IV-PK-KEY-1              TO D-PK-KEY-1
048600     .
048700
048800 M300-DATA-LEN     SECTION.
048900 M300-START.
049000     MOVE 031 TO D-KEY-1
049100     MOVE 001 TO D-STAT
049200     MOVE 200 TO D-TEXT
049300     MOVE 003 TO D-TEXT-LENGTH
049400     MOVE 003 TO D-TEXT-BOUND-LEN
049500     MOVE 0031 TO D-PK-KEY-1
049600     .
049700 Z500-INIT-STATUS    SECTION.
049800 Z500-START.
049900     MOVE 0 TO IOMOD-F1-SQLCODE
050000               IOMOD-F2-SQLCODE
050100               IOMOD-F1-ERRL
050200               IOMOD-F2-ERRL
050300     MOVE SPACES TO IOMOD-F1-STAT
050400                    IOMOD-F2-STAT
050500                    IOMOD-F1-FUNCT
050600                    IOMOD-F2-FUNCT
050700                    IOMOD-F1-ERRM
050800                    IOMOD-F2-ERRM
050900     .
051000


---------------------



000100$ SET ilsmartlinkage
000200$ SET ilnamespace "com.tcs.bancs.microservices.jvm.dbio"       
      *** Start of PVCS Information *************************
      * $Archive:   //TCSSBI/archives/Database/Oracle/pco/IOMISC.PCO-arc  $/archives/Database/Oracle/pco/IOMISC.PCO-arc  $
      * $Revision:   3.2  $
      * $Modtime:   May 02 2019 11:35:42  $
      * $Author:   cnfgml  $
      * $Date:   May 02 2019 11:50:48  $
      * $Log:   //TCSSBI/archives/Database/Oracle/pco/IOMISC.PCO-arc  $/archives/Database/Oracle/pco/IOMISC.PCO-arc  $
      *
      *   Rev 3.2   May 02 2019 11:50:48   cnfgml
      *IR 261628/PSO-20190502-20573/Change/Desc:Implementation of Smart Log in Dep transaction [To handle the transaction not covered in IR 260818]
      *Dev:Bhagyashree
      *
      *   Rev 3.1   Mar 04 2012 19:35:48   lonml
      *IR 72445  SOL-20120304-10117
      *DESC: Fix for Timeout Transaction Rollback for TF - Ramakrishna S
      *
      *   Rev 3.0   Dec 24 2003 15:56:12   sysvc
      *Resolution for 20695:Creating 3.* for 1.2 release
      *
      *   Rev 2.0   Sep 03 2003 11:30:56   sysvc
      *All the components are checked oout and checked in as version 2.0 without any change. 
      *This is done to start modification for 1.11 drop for State Bank of India (SBI) in Mumbai.
      *The changes are done by Susheel Nagwekar of TCS.
      *Resolution for 20500: LON - Change to change version of all components to 2.0
      *
      *   Rev 1.3   Sep 11 2001 22:05:14   pvcs
      *Initial check in. BANCS 8.0 D
      *** End of PVCS Information ***************************
      *@(#) IOMISC.PCO VERSION 80.1
      *@(#) LAST UPDATED ON 01/02/13 AT 18:40:24
      *@(#) THIS FILE OBTAINED FROM
      *@(#)    /fns/sccs/d/r/dbora/pco/s.IOMISC.PCO
      *@(#)    ON 01/09/11 AT 19:26:29
      ******************************************************************
      *   (C) COPYRIGHT FINANCIAL NETWORK SERVICES PTY LTD. 1982       *
      *       ALL RIGHTS RESERVED. NO PART OF THIS PROGRAM MAY         *
      *       BE PHOTOCOPIED, REPRODUCED, TRANSLATED TO ANOTHER        *
      *       PROGRAM LANGUAGE OR USED IN ANY WAY WITHOUT THE          *
      *       PRIOR WRITTEN CONSENT OF FINANCIAL NETWORK SERVICES      *
      *       OR THE AUTHORISED SELLING AGENT.                         *
      *----------------------------------------------------------------*
      *             FINANCIAL NETWORK SERVICES PTY LTD.                *
      *             UNIT 6, 70 ROSEHILL ST REDFERN 2016                *
      *                   SYDNEY, AUSTRALIA.                           *
      *                  TEL. (612) 318-1088                           *
      ******************************************************************
      *            P R O G R A M     H I S T O R Y
      *  PROGRAMMERS INITIALS TOGETHER WITH THE "SPR" NUMBER MUST BE
      *  REFLECTED IN COLUMNS 73-80 OF EVERY LINE/S CHANGED OR ADDED.
      *
      * PROGRAMMER : DATE :SPR NO:COMMENTS
      *-----------------------------------------------------------------
      * R BALATON  :010897:DBA000: FOR 24 HOUR PROCESSING
      *-----------------------------------------------------------------
      * R BALATON  :071099:DBA000: CHANGE CALLS FROM UT0008 TO UT9004
      *-----------------------------------------------------------------
      * R BALATON  :061299:DBA000: ADD SGA STATISTICS, RETROFIT FROM TBT
      *-----------------------------------------------------------------
R72445* RAMAKRISHNA S : 04032012 : 72445 : TRANSACTION TIMEDOUT TO BE RB
R72445*-----------------------------------------------------------------
BBBBBB* BHAGYASHREE : 15042019 : 261628 :Implementation of Smart Log in*
BBBBBB*                                  Dep transaction [To handle the*
BBBBBB*                                  transaction not covered in    *
BBBBBB*                                  IR  260818                    *
BBBBBB******************************************************************

       IDENTIFICATION DIVISION.
       PROGRAM-ID.      IOMISC.
       AUTHOR.          FNS.
       DATE-WRITTEN.    920222.
       DATE-COMPILED.   XXXXXXXXXXX.
       SECURITY.
      *    SQL  MODULE FOR COMMIT, ROLLBACK SET TRANSACTION.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  SQLFPN GLOBAL.
           02  SQLFPN-FILE-LEN PIC S9(4) COMP VALUE +30.
           02  SQLFPN-FILENAME PIC X(30) VALUE "/fns/d4/r/dbora/pco/IOMI
      -    "SC.PCO".

       01  SQ0003 GLOBAL.
           02  FILLER PIC X(62) VALUE "begin  DBMS_APPLICATION_INFO . SE
      -    "T_MODULE ( :b1 , '' ) ; END ;".

       01  SQLCTX GLOBAL PIC S9(9) COMP VALUE +792940917.


       01  SQLEXD GLOBAL.
           02  SQL-SQLVSN   PIC S9(18) COMP VALUE +13.
           02  SQL-ARRSIZ   PIC S9(9) COMP VALUE +4.
           02  SQL-ITERS    PIC S9(9) COMP.
           02  SQL-OFFSET   PIC S9(9) COMP.
           02  SQL-SELERR   PIC S9(4) COMP.
           02  SQL-SQLETY   PIC S9(4) COMP.
           02  SQL-OCCURS   PIC S9(9) COMP.
           02  SQL-DUMMY    PIC S9(9) COMP.
           02  SQL-CUD      PIC S9(18) COMP.
           02  SQL-SQLEST   PIC S9(18) COMP.
           02  SQL-STMT     PIC S9(18) COMP.
           02  SQL-SQLADTP  PIC S9(18) COMP VALUE 0.
           02  SQL-SQLTDSP  PIC S9(18) COMP VALUE 0.
           02  SQL-SQPHSV   PIC S9(18) COMP.
           02  SQL-SQPHSL   PIC S9(18) COMP.
           02  SQL-SQPHSS   PIC S9(18) COMP.
           02  SQL-SQPIND   PIC S9(18) COMP.
           02  SQL-SQPINS   PIC S9(18) COMP.
           02  SQL-SQPARM   PIC S9(18) COMP.
           02  SQL-SQPARC   PIC S9(18) COMP.
           02  SQL-SQPADTO  PIC S9(18) COMP.
           02  SQL-SQPTDSO  PIC S9(18) COMP.
           02  SQL-SQPHR1   PIC S9(9) COMP.
           02  SQL-SQPHR2   PIC S9(9) COMP.
           02  SQL-SQPHR3   PIC S9(9) COMP.
           02  SQL-SQPHR4   PIC S9(9) COMP.
           02  SQL-SQPHR5   PIC S9(9) COMP.
           02  SQL-SQFOFF   PIC S9(9) COMP.
           02  SQL-SQCMOD   PIC S9(9) COMP.
           02  SQL-SQFMOD   PIC S9(9) COMP.
           02  SQL-SQPMEM   PIC S9(9) COMP.
           02  SQL-DUMMYPF  PIC S9(9) COMP.
           02  SQL-SQHSTV   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQHSTL   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQHSTS   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQINDV   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQINDS   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQHARM   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQHARC   PIC S9(18) COMP OCCURS 4 TIMES.
           02  SQL-SQADTO   PIC S9(4) COMP OCCURS 4 TIMES.
           02  SQL-SQTDSO   PIC S9(4) COMP OCCURS 4 TIMES.


       01  SQL-RUNTIME-VARS.
           02  SQL-IAPXIT-SUCCESS  PIC S9(9) COMP VALUE    +0.
           02  SQL-IAPXIT-FAILURE  PIC S9(9) COMP VALUE +1403.
           02  SQL-IAPXIT-FATALERR PIC S9(9) COMP VALUE  +535.

       01  SQLCUD GLOBAL.
           02     FILLER PIC S9(4) COMP VALUE +13.
           02     FILLER PIC S9(4) COMP VALUE +4130.
           02     FILLER PIC S9(4) COMP VALUE +31.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +5.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +7.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +285.
           02     FILLER PIC S9(4) COMP VALUE +176.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +20.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +2.
           02     FILLER PIC S9(4) COMP VALUE +9.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +287.
           02     FILLER PIC S9(4) COMP VALUE +192.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +35.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +283.
           02     FILLER PIC S9(4) COMP VALUE +205.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +4.
           02     FILLER PIC S9(4) COMP VALUE +4.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +96.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +10.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +10.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +10.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +66.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +3.
           02     FILLER PIC S9(4) COMP VALUE +62.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +262.
           02     FILLER PIC S9(4) COMP VALUE +241.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +1.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +3.
           02     FILLER PIC S9(4) COMP VALUE +96.
           02     FILLER PIC S9(4) COMP VALUE +0.
           02     FILLER PIC S9(4) COMP VALUE +0.
       01  W-PROGRAM-NAME              PIC X(12)  VALUE  "IOMISC:".
       01  W-PROGRAM-CALLED            PIC X(8)   VALUE  "UT9004".
R72445* IR 72445 CHANGES START HERE
R72445 01 UTCMMTCA-CALL-AREA.
R72445    COPY UTCMMTCA IN LIBRYMIS.
R72445*
R72445 COPY UT8500CA IN LIBRYMIS.
R72445 COPY UT8500FU IN LIBRYMIS.
R72445* IR 72445 CHANGES END HERE
       01  UT9004CA-CALL-AREA.
           COPY UT9004CA IN LIBRYMIS
                REPLACING ==(UT9004CA)== BY ==UT9004CA==.
       01  WORKING-VARIABLES.
           03  SQLCODE-D               PIC S9(9) SIGN LEADING SEPARATE.
       01  IOMISC-DATA.
           03  IOMISC-CONNECT-FLAG     PIC X(01).
       01  WA-GETEVAR-ENV-ID1          PIC X(30)  VALUE
           "BANCSPROGRAMID".
       01  WA-GETEVAR-ENV-ID2          PIC X(30)  VALUE
           "BANCSORACLETRACEUSER".

           COPY GETEVCA IN LIBRYMIS.

      *    EXEC SQL BEGIN DECLARE SECTION END-EXEC.

       01  ORACLE-ID                   PIC X(01) VALUE "/".
       01  WA-PROGRAM-ID               PIC X(30).

      *    EXEC SQL END DECLARE SECTION END-EXEC.

      *    EXEC SQL INCLUDE SQLCA END-EXEC.
       01  SQLCA GLOBAL.
           05  SQLCAID               PIC X(8).
           05  SQLCABC               PIC S9(9) COMPUTATIONAL.
           05  SQLCODE               PIC S9(9) COMPUTATIONAL.
           05  SQLERRM.
               49 SQLERRML           PIC S9(4) COMPUTATIONAL.
               49 SQLERRMC           PIC X(70).
           05  SQLERRP               PIC X(8).
           05  SQLERRD OCCURS 6 TIMES
                                     PIC S9(9) COMPUTATIONAL.
           05  SQLWARN.
               10 SQLWARN0           PIC X(1).
               10 SQLWARN1           PIC X(1).
               10 SQLWARN2           PIC X(1).
               10 SQLWARN3           PIC X(1).
               10 SQLWARN4           PIC X(1).
               10 SQLWARN5           PIC X(1).
               10 SQLWARN6           PIC X(1).
               10 SQLWARN7           PIC X(1).
           05  SQLEXT                PIC X(8).

       LINKAGE SECTION.
             COPY IOMODCA IN LIBRYMIS.
             COPY IOORAST IN LIBRYMIS.

       PROCEDURE DIVISION USING IOMOD-FILE
                                IOMOD-KEY
                                IOMOD-RECORD
                                IOMOD-FUNCTION
                                IOMOD-KEY-NO
                                IOMOD-RELEASE-LOCK
                                IOMOD-ACCESS-COMMAND
                                IOMOD-ACCESS-COND
                                IOMOD-STATUS.
       A-RUN SECTION.
       A-10.
           SET UT9004CA-CALL-FOR-GET TO TRUE.
           MOVE "UT9004" TO W-PROGRAM-CALLED.
           CALL W-PROGRAM-CALLED USING UT9004CA-CALL-AREA.
           IF UT9004CA-TRACESTATE-ON
              DISPLAY "IOMISC:"
                      "(A-10) ENTRY - FUNCTION " IOMOD-FUNCTION
           END-IF
           MOVE IOMOD-RECORD(1:1) TO IOMISC-DATA
           MOVE 0 TO IOMOD-F1-SQLCODE
                     IOMOD-F2-SQLCODE
           EVALUATE TRUE
             WHEN COMMIT-CMD
                  PERFORM Z100-SQL-COMMIT
             WHEN ROLLBACK-CMD
                  PERFORM Z200-SQL-ROLLBACK
             WHEN RELTXCON-CMD
                  PERFORM Z100-SQL-COMMIT
             WHEN SETTXCON-CMD
                  PERFORM Z300-SQL-SETTXCON
             WHEN OPEN-CMD
                  PERFORM Z300-SQL-SETTXCON
             WHEN CLOSE-CMD
                  PERFORM Z100-SQL-COMMIT
             WHEN OTHER
                  DISPLAY "IOMISC(A-10): INVALID MODULE FUNCTION "
                          IOMOD-FUNCTION
           END-EVALUATE

           MOVE IOMISC-DATA TO IOMOD-RECORD
           IF SQLCODE NOT = 0 AND SQLCODE NOT = -1075
              MOVE SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:(A-10)"
                      " ERROR SQLCODE " SQLCODE-D
              DISPLAY "IOMISC:(A-10) " SQLERRMC
           END-IF.
           MOVE SQLCODE TO IOMOD-F2-SQLCODE
           IF UT9004CA-TRACESTATE-ON
              MOVE IOMOD-F1-SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:"
                      "(A-10) EXIT - FUNCTION " IOMOD-FUNCTION
                      " F1 SQLCODE = " SQLCODE-D
              MOVE IOMOD-F2-SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:"
                      "(A-10) EXIT - FUNCTION " IOMOD-FUNCTION
                      " F2 SQLCODE = " SQLCODE-D
           END-IF
           .
       A-GOBACK.
           EXIT PROGRAM
           .
       Z100-SQL-COMMIT   SECTION.
       Z100-START.
      *    EXEC SQL COMMIT
      *    END-EXEC.
           MOVE 1 TO SQL-ITERS
           MOVE 5 TO SQL-OFFSET
           MOVE 0 TO SQL-OCCURS
           CALL "SQLADR" USING
               SQLCUD
               SQL-CUD
           CALL "SQLADR" USING
               SQLCA
               SQL-SQLEST
           MOVE 4352 TO SQL-SQLETY

           CALL "SQLBEX" USING
               SQLCTX
               SQLEXD
               SQLFPN
               .
           MOVE SQLCODE TO IOMOD-F2-SQLCODE
R72445* IR 72445 CHNAGES START HERE
R72445     PERFORM R000-PERFORM-UTCMMT
R72445* IR 72445 CHNAGES END HERE
           IF UT9004CA-TRACESTATE-ON
              MOVE SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:"
                      "(Z100) FUNCTION " IOMOD-FUNCTION
                      " SQLCODE = " SQLCODE-D
           END-IF

           .
       Z200-SQL-ROLLBACK   SECTION.
       Z200-START.
      *    EXEC SQL ROLLBACK
      *    END-EXEC.
           MOVE 1 TO SQL-ITERS
           MOVE 20 TO SQL-OFFSET
           MOVE 0 TO SQL-OCCURS
           CALL "SQLADR" USING
               SQLCUD
               SQL-CUD
           CALL "SQLADR" USING
               SQLCA
               SQL-SQLEST
           MOVE 4352 TO SQL-SQLETY

           CALL "SQLBEX" USING
               SQLCTX
               SQLEXD
               SQLFPN
               .
           MOVE SQLCODE TO IOMOD-F2-SQLCODE
           IF UT9004CA-TRACESTATE-ON
              MOVE SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:"
                      "(Z200) FUNCTION " IOMOD-FUNCTION
                      " SQLCODE = " SQLCODE-D 
           END-IF
           .
       Z300-SQL-SETTXCON  SECTION.
       Z300-START.
           IF IOMISC-CONNECT-FLAG  NOT = "Y"
      *       EXEC SQL
      *            CONNECT :ORACLE-ID
      *       END-EXEC
              MOVE 40 TO SQL-ITERS
              MOVE 35 TO SQL-OFFSET
              MOVE 0 TO SQL-OCCURS
              CALL "SQLADR" USING
                  SQLCUD
                  SQL-CUD
              CALL "SQLADR" USING
                  SQLCA
                  SQL-SQLEST
              MOVE 4352 TO SQL-SQLETY
              CALL "SQLADR" USING
                  ORACLE-ID
                  SQL-SQHSTV(1)
              MOVE 1 TO SQL-SQHSTL(1)
              MOVE 1 TO SQL-SQHSTS(1)
              MOVE 0 TO SQL-SQINDV(1)
              MOVE 0 TO SQL-SQINDS(1)
              MOVE 0 TO SQL-SQHARM(1)
              CALL "SQLADR" USING
                  SQL-SQHSTV(1)
                  SQL-SQPHSV
              CALL "SQLADR" USING
                  SQL-SQHSTL(1)
                  SQL-SQPHSL
              CALL "SQLADR" USING
                  SQL-SQHSTS(1)
                  SQL-SQPHSS
              CALL "SQLADR" USING
                  SQL-SQINDV(1)
                  SQL-SQPIND
              CALL "SQLADR" USING
                  SQL-SQINDS(1)
                  SQL-SQPINS
              CALL "SQLADR" USING
                  SQL-SQHARM(1)
                  SQL-SQPARM
              CALL "SQLADR" USING
                  SQL-SQHARC(1)
                  SQL-SQPARC

              CALL "SQLBEX" USING
                  SQLCTX
                  SQLEXD
                  SQLFPN
              IF SQLCODE = 0 OR SQLCODE = -1075
                 MOVE "Y" TO IOMISC-CONNECT-FLAG
              ELSE
                 MOVE "N" TO IOMISC-CONNECT-FLAG
              END-IF
              PERFORM Z900-SET-APPLICATION-NAME
           ELSE
               MOVE 0 TO SQLCODE
           END-IF
           MOVE SQLCODE TO IOMOD-F2-SQLCODE
           IF UT9004CA-TRACESTATE-ON
              MOVE SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC:"
                      "(Z300) FUNCTION " IOMOD-FUNCTION
                      " SQLCODE = " SQLCODE-D
           END-IF
           .
       Z900-SET-APPLICATION-NAME SECTION.
       Z900-START.

      *    SET APPLICATION NAME BASED ON ENVIRONMENT VAR
      *    BANCSPROGRAMNAME

           MOVE WA-GETEVAR-ENV-ID1  TO GETEVAR-ID
           MOVE SPACES              TO GETEVAR-DATA WA-PROGRAM-ID.
           CALL "GETEVAR"           USING GETEVAR-ID
                                          GETEVAR-DATA
                                          GETEVAR-LENGTH.
           IF GETEVAR-LENGTH-BYTE > 0
              INSPECT GETEVAR-DATA REPLACING ALL LOW-VALUES BY SPACES
              MOVE GETEVAR-DATA TO WA-PROGRAM-ID
           END-IF.

      *    EXEC SQL EXECUTE
      *         BEGIN
      *         DBMS_APPLICATION_INFO.SET_MODULE( :WA-PROGRAM-ID, '');
      *         END;
      *    END-EXEC.
           CALL "SQLADR" USING SQ0003 SQL-STMT
           MOVE 1 TO SQL-ITERS
           MOVE 66 TO SQL-OFFSET
           MOVE 0 TO SQL-OCCURS
           CALL "SQLADR" USING
               SQLCUD
               SQL-CUD
           CALL "SQLADR" USING
               SQLCA
               SQL-SQLEST
           MOVE 4352 TO SQL-SQLETY
           CALL "SQLADR" USING
               WA-PROGRAM-ID
               SQL-SQHSTV(1)
           MOVE 30 TO SQL-SQHSTL(1)
           MOVE 30 TO SQL-SQHSTS(1)
           MOVE 0 TO SQL-SQINDV(1)
           MOVE 0 TO SQL-SQINDS(1)
           MOVE 0 TO SQL-SQHARM(1)
           CALL "SQLADR" USING
               SQL-SQHSTV(1)
               SQL-SQPHSV
           CALL "SQLADR" USING
               SQL-SQHSTL(1)
               SQL-SQPHSL
           CALL "SQLADR" USING
               SQL-SQHSTS(1)
               SQL-SQPHSS
           CALL "SQLADR" USING
               SQL-SQINDV(1)
               SQL-SQPIND
           CALL "SQLADR" USING
               SQL-SQINDS(1)
               SQL-SQPINS
           CALL "SQLADR" USING
               SQL-SQHARM(1)
               SQL-SQPARM
           CALL "SQLADR" USING
               SQL-SQHARC(1)
               SQL-SQPARC

           CALL "SQLBEX" USING
               SQLCTX
               SQLEXD
               SQLFPN
               .

           IF SQLCODE NOT = 0
              MOVE SQLCODE TO SQLCODE-D
              DISPLAY "IOMISC: DBMS APPLICATION RETURNED " SQLCODE-D
           END-IF.

      *    SET TRACE USER NAME BASED ON ENVIRONMENT VAR
      *    BANCSORACLETRACEUSER

           MOVE WA-GETEVAR-ENV-ID2  TO GETEVAR-ID
           MOVE SPACES              TO GETEVAR-DATA WA-PROGRAM-ID.
           CALL "GETEVAR"           USING GETEVAR-ID
                                          GETEVAR-DATA
                                          GETEVAR-LENGTH.
           IF GETEVAR-LENGTH-BYTE > 0
              INSPECT GETEVAR-DATA REPLACING ALL LOW-VALUES BY SPACES
              MOVE GETEVAR-DATA TO WA-PROGRAM-ID
           END-IF.
R72445********************START OF IR 72445*****************
R72445 R000-PERFORM-UTCMMT SECTION.
R72445 R000-START.
R72445*    SET A FLAG TO INDICATE THAT THE TRANSACTION IS COMMITED
R72445*    EARLIER IN THE SAME TRASACTION PROCESSING
R72445      MOVE SPACES TO UTCMMTCA-IP-CMMT-FLAG
R72445      MOVE "Y" TO UTCMMTCA-IP-CMMT-FLAG
R72445      MOVE 01 TO UTCMMTCA-CALL-CODE.
R72445      CALL "UTCMMT" USING
R72445                  UTCMMTCA-CALL-AREA.
R72445      SET UT8500CA-RESPONSE-NOT-REQD TO TRUE
R72445      SET UT8500CA-NORMAL-DISPLAY    TO TRUE
R72445      MOVE SPACES TO UT8500CA-INPUT-MSG
R72445      IF UTCMMTCA-STATUS NOT = 0
R72445          STRING "IOMISC:(R000) UTCMMT FAILURE, STAT- "
R72445                 UTCMMTCA-STATUS
R72445                 DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
R72445          CALL "UT8500" USING
R72445                        UT8500CA-AREA
R72445       ELSE 
R72445          STRING "IOMISC:(R000) COMMITED ... "
R72445                 DELIMITED BY SIZE INTO UT8500CA-INPUT-MSG
BBBBBB*************START OF IR 261628*************************
BBBBBB             SET UT8500CA-COMMIT-DISPLAY TO TRUE
BBBBBB             MOVE "N" TO UT8500CA-RESPONSE-REQD-FLAG
BBBBBB***************** END OF IR 261628 **********************
R72445          CALL "UT8500" USING
R72445                        UT8500CA-AREA
R72445      END-IF.
R72445********************END   OF IR 72445*****************
